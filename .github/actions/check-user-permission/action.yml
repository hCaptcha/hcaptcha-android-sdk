name: Check User Permission
description: Checks if the user has the required permission level.

inputs:
  token:
    description: Secret GitHub API token to use for making API requests.
    default: ${{ github.token }}
    required: true
  require:
    description: 'Permission level to check against (admin, write, read)'
    default: write
    required: true

outputs:
  granted:
    description: 'true if the user has the required permission, false otherwise'
    value: ${{ steps.check.outputs.granted }}
  permission:
    description: actual user permission (admin, write, read)
    value: ${{ steps.check.outputs.permission }}

runs:
  using: "composite"
  steps:
    - name: Check user permission
      id: check
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
        OWNER: ${{ github.repository_owner }}
        REPO: ${{ github.event.repository.name }}
        USERNAME: ${{ github.triggering_actor }}
        PERMISSION: ${{ inputs.require }}
      run: |
        # Fetch the collaborator permission level using the GitHub API
        response=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
                        "https://api.github.com/repos/$OWNER/$REPO/collaborators/$USERNAME/permission")

        # Extract the permission level from the JSON response
        user_permission=$(echo $response | jq -r '.permission')
        echo "permission=${user_permission}" >> $GITHUB_OUTPUT

        # Compare the permission level with the required permission
        if [[ "$user_permission" == "$PERMISSION" || ( "$user_permission" == "admin" && "$PERMISSION" == "write" ) ]]; then
          echo "User has the required permission."
          echo "granted=true" >> $GITHUB_OUTPUT
        else
          echo "User does not have the required permission."
          echo "granted=false" >> $GITHUB_OUTPUT
        fi
